rancher_max_version: 2.3.1
categories:
- Monitoring
questions:
# Docker image configurations
- variable: defaultImage
  default: "true"
  description: "Use default Docker image"
  label: Use Default Image
  type: boolean
  show_subquestion_if: false
  group: "Container Images"
  subquestions:
  - variable: server.image.repository
    default: "prom/prometheus"
    description: "Prometheus image name"
    type: string
    label: Prometheus Image Name
  - variable: server.image.tag
    default: "v2.2.1"
    description: "Prometheus image tag"
    type: string
    label: Prometheus Image Tag
  - variable: alertmanager.image.repository
    default: "prom/alertmanager"
    description: "Alertmanager image name"
    type: string
    label: Alertmanager Image Name
    show_if: "alertmanager.enabled=true"
  - variable: alertmanager.image.tag
    default: "v0.14.0"
    description: "Alertmanager image tag"
    type: string
    label: Alertmanager Image Tag
    show_if: "alertmanager.enabled=true"
  - variable: nodeExporter.image.repository
    default: "prom/node-exporter"
    description: "Node exporter image name"
    type: string
    label: NodeExporter Image Name
  - variable: nodeExporter.image.tag
    default: "v0.15.2"
    description: "Node exporter image tag"
    type: string
    label: NodeExporter Image Tag
  - variable: pushgateway.image.repository
    default: "prom/pushgateway"
    description: "Pushgateway image name"
    type: string
    label: Pushgateway Image Name
  - variable: pushgateway.image.tag
    default: "v0.4.0"
    description: "Pushgateway image tag"
    type: string
    label: Pushgateway Image Tag
  - variable: kubeStateMetrics.image.repository
    default: "quay.io/coreos/kube-state-metrics"
    description: "Kube-state-metrics image name"
    type: string
    label: KubeStateMetrics Image Name
  - variable: kubeStateMetrics.image.tag
    default: "v1.3.1"
    description: "Kube-state-metrics image tag"
    type: string
    label: KubeStateMetrics Image Tag
  - variable: grafana.image.repository
    default: "grafana/grafana"
    description: "Grafana image name"
    type: string
    label: Grafana Image Name
  - variable: grafana.image.tag
    default: "5.0.0"
    description: "Grafana image tag"
    type: string
    label: Grafana Image Tag
  - variable: grafana.grafanaWatcher.image.repository
    default: "quay.io/coreos/grafana-watcher"
    description: "Grafana Watcher image name"
    type: string
    label: Grafana Watcher Image Name
  - variable: grafana.grafanaWatcher.image.tag
    default: "v0.0.8"
    description: "Grafana Watcher image tag"
    type: string
    label: Grafana Watcher Image Tag
# server configurations
- variable: server.ingress.enabled
  default: true
  description: "Expose prometheus using Layer 7 Load Balancer - ingress"
  type: boolean
  group: "Prometheus Server"
  label: Expose Prometheus using Layer 7 Load Balancer
  show_subquestion_if: true
  required: true
  subquestions:
  - variable: server.ingress.hosts[0]
    default: "xip.io"
    description: "Prometheus server ingress hostname"
    type: hostname
    required: true
    label: Hostname
- variable: server.service.type
  default: "NodePort"
  description: "Server service type"
  group: "Prometheus Server"
  type: enum
  show_if: "server.ingress.enabled=false"
  options:
    - "ClusterIP"
    - "NodePort"
  required: true
  label: Prometheus Service Type
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: server.service.nodePort
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    label: Prometheus NodePort Http Port
    show_if: "server.ingress.enabled=false&&server.service.type=NodePort"
- variable: server.persistentVolume.enabled
  default: "false"
  description: "If true, prometheus will create a persistent volume claim"
  type: boolean
  group: "Prometheus Server"
  required: true
  label: Create Persistent Volume for Prometheus
  show_subquestion_if: true
  subquestions:
  - variable: server.persistentVolume.size
    default: "8Gi"
    description: "Prometheus data persistent volume size"
    type: string
    label: Prometheus Persistent Volume Size
  - variable: server.persistentVolume.storageClass
    default: ""
    description: "Prometheus data persistent volume storageClass, if not set use default StorageClass"
    type: storageclass
    label: Prometheus Persistent Volume StorageClass
# grafana configurations
- variable: grafana.enabled
  default: true
  description: "Create Grafana Dashboard"
  type: boolean
  group: "Grafana Settings"
  label: Enable Grafana Dashboard
  show_subquestion_if: "true"
  subquestions:
  - variable: grafana.adminUser
    default: "admin"
    description: "Grafana admin username"
    type: string
    group: "Grafana Settings"
    label: Grafana Admin Username
    required: true
  - variable: grafana.adminPassword
    default: ""
    description: "Grafana admin password"
    type: password
    group: "Grafana Settings"
    label: Grafana Admin Password
- variable: grafana.ingress.enabled
  default: "true"
  description: "Expose grafana using Layer 7 Load Balancer - ingress"
  type: boolean
  group: "Grafana Settings"
  label: Expose Grafana using Layer 7 Load Balancer
  show_if: "grafana.enabled=true"
  required: true
  show_subquestion_if: true
  subquestions:
  - variable: grafana.ingress.hosts[0]
    default: "xip.io"
    description: "Hostname to your grafana installation"
    type: hostname
    required: true
    label: Hostname
    show_if: "grafana.enabled=true"
- variable: grafana.service.type
  default: "NodePort"
  description: "Grafana service type"
  type: enum
  group: "Grafana Settings"
  show_if: "grafana.enabled=true"
  options:
    - "ClusterIP"
    - "NodePort"
  required: true
  label: Grafana Service Type
  show_if: "grafana.enabled=true&&grafana.ingress.enabled=false"
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: grafana.service.nodePort
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    label: Grafana NodePort Number
    show_if: "grafana.enabled=true&&grafana.ingress.enabled=false"
- variable: grafana.persistence.enabled
  default: "false"
  description: "Enable persistent volume for Grafana"
  type: boolean
  required: true
  label: Grafana Persistent Volume Enabled
  show_if: "grafana.enabled=true"
  show_subquestion_if: true
  group: "Grafana Settings"
  subquestions:
  - variable: grafana.persistence.size
    default: "8Gi"
    description: "Grafana Persistent Volume Size"
    type: string
    label: Grafana Volume Size
    required: true
  - variable: grafana.persistence.storageClass
    default: ""
    description: "If undefined or set to null, using the default storageClass. Defaults to null."
    type: storageclass
    label: Storage Class for Grafana
# alertmanager configurations
- variable: alertmanager.enabled
  default: "true"
  description: "If true, create alertmanager"
  type: boolean
  group: "Alertmanager"
  label: Enable Alertmanager
  show_subquestion_if: true
- variable: alertmanager.ingress.enabled
  default: "false"
  description: "Expose alertmanager using Layer 7 Load Balancer - ingress"
  type: boolean
  group: "Alertmanager"
  label: Expose Alertmanager using Layer 7 Load Balancer
  show_if: "alertmanager.enabled=true"
  show_subquestion_if: true
  required: true
  subquestions:
  - variable: alertmanager.ingress.hosts[0]
    default: "xip.io"
    description: "Hostname to your alertmanager installation"
    type: hostname
    required: true
    label: Hostname
    show_if: "alertmanager.enabled=true"
- variable: alertmanager.service.type
  default: "NodePort"
  description: "Alertmanager service type"
  type: enum
  show_if: "alertmanager.ingress.enabled=false&&alertmanager.enabled=true"
  group: "Alertmanager"
  options:
    - "ClusterIP"
    - "NodePort"
  required: true
  label: Alertmanager Service Type
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: alertmanager.service.nodePort
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    label: Alertmanager NodePort Http Port
    show_if: "alertmanager.enabled=true&&alertmanager.ingress.enabled=false"
- variable: alertmanager.persistentVolume.enabled
  default: "false"
  description: "If true, alertmanager will create a persistent volume claim"
  type: boolean
  required: true
  group: "Alertmanager"
  label: Create Persistent Volume for Alertmanager
  show_if: "alertmanager.enabled=true"
  show_subquestion_if: true
  subquestions:
  - variable: alertmanager.persistentVolume.size
    default: "2Gi"
    description: "Alertmanager data persistent volume size"
    type: string
    label: Alertmanager Persistent Volume Size
    show_if: "alertmanager.enabled=true"
  - variable: alertmanager.persistentVolume.storageClass
    default: ""
    description: "Alertmanager data persistent volume storageClass, if not set use default StorageClass"
    type: storageclass
    label: Alertmanager Persistent Volume StorageClass
    show_if: "alertmanager.enabled=true"
